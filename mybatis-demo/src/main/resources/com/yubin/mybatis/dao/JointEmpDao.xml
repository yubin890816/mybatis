<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace:编写接口的全类名,就是告诉要实现该配置文件是哪个接口的具体实现
-->
<mapper namespace="com.yubin.mybatis.dao.JointEmpDao">

    <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>
    <!--
        在做查询的时候有时候需要关联其它对象,因此需要使用关联查询
        可以通过下面自定义结果集的方式实现
    -->
    <select id="selectEmpByEmpno" resultMap="myEmp">
        select * from emp left join dept on emp.deptno = dept.deptno where empno = #{empno}
    </select>

    <!-- 将每一个属性值都映射成对象中的数据,如果有实体类对象,就写成对象.属性的方式 -->
    <!--<resultMap id="myEmp" type="com.yubin.mybatis.pojo.JointEmp">
        <id column="empno" property="empno"/>
        <result column="ename" property="ename"/>
        <result column="job" property="job"/>
        <result column="mgr" property="mgr"/>
        <result column="hiredate" property="hiredate"/>
        <result column="sal" property="sal"/>
        <result column="deptno" property="dept.deptno"/>
        <result column="dname" property="dept.dname"/>
        <result column="loc" property="dept.loc"/>
    </resultMap>-->

    <resultMap id="myEmp" type="com.yubin.mybatis.pojo.JointEmp">
        <id column="empno" property="empno"/>
        <result column="ename" property="ename"/>
        <result column="job" property="job"/>
        <result column="mgr" property="mgr"/>
        <result column="hiredate" property="hiredate"/>
        <result column="sal" property="sal"/>
        <!--在mybatis中还提供了一种简单的形式，使用association标签可以搞定-->
        <association property="dept" javaType="com.yubin.mybatis.pojo.JointDept">
            <id column="deptno" property="deptno"/>
            <result column="dname" property="dname"/>
            <result column="loc" property="loc"/>
        </association>
    </resultMap>



    <!--关联查询中的分步查询-->
    <select id="selectEmpBySimple" resultMap="empDept">
        select * from emp where empno=#{empno}
    </select>

    <resultMap id="empDept" type="com.yubin.mybatis.pojo.JointEmp">
        <id column="empno" property="empno"/>
        <result column="ename" property="ename"/>
        <result column="job" property="job"/>
        <result column="mgr" property="mgr"/>
        <result column="hiredate" property="hiredate"/>
        <result column="sal" property="sal"/>
        <association property="dept" select="com.yubin.mybatis.dao.JointDeptDao.selectDeptBySimple" column="deptno"></association>
    </resultMap>

    <select id="selectEmpStep" resultType="com.yubin.mybatis.pojo.JointEmp">
        select * from emp where deptno=#{deptno}
    </select>

    <select id="selectEmpByCondition" resultType="com.yubin.mybatis.pojo.JointEmp">
        select * from emp
        <where>
            <if test="empno != null">
                empno = #{empno}
            </if>
            <if test="ename != null">
                and ename = #{ename}
            </if>
            <if test="sal != null">
                and sal > #{sal}
            </if>
        </where>
    </select>

    <select id="selectEmpByCondition2" resultType="com.yubin.mybatis.pojo.JointEmp">
        select * from emp
        <!--
            trim:截取字符串
            prefix:前缀,为sql整体添加一个前缀
            prefixOverrides: 去除整体字符串前面多余的字符
            suffix: 后缀,为sql整体添加一个后缀
            suffixOverrides: 去除整体字符串后面多余的字符
        -->
        <trim prefix="where" prefixOverrides="and | or" suffix=";" suffixOverrides="and | or">

            <if test="empno != null">
                empno = #{empno} and
            </if>
            <if test="ename != null">
                ename = #{ename} and
            </if>
            <if test="sal != null">
                sal > #{sal}
            </if>
        </trim>
    </select>

    <select id="selectEmpByEmpNos" resultType="com.yubin.mybatis.pojo.JointEmp">
        select * from emp
        <!--
            foreach:是对集合进行遍历
                collection: 指定要遍历的集合,集合默认的名称是:collection, list
                open: 表示以什么开始
                close: 表示以什么结束
                index: 给定一个索引值
                item: 遍历的每一个元素的值
                separator: 表示多个元素的分隔符
        -->
        <foreach collection="empnos" open="where empno in(" close=")" index="idx" item="empno" separator=",">
            #{empno}
        </foreach>
    </select>

    <select id="selectEmpByConditionChoose" resultType="com.yubin.mybatis.pojo.JointEmp">
        select * from emp
        <where>
            <choose>
                <when test="empno != null">
                    empno = #{empno}
                </when>
                <when test="ename != null">
                    and ename = #{ename}
                </when>
                <otherwise>
                    and sal > 100
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateEmpByEmpno">
        update emp
        <set>
            <if test="ename != null">
                ename = #{ename},
            </if>
            <if test="sal != null">
                sal = #{sal},
            </if>
            <if test="comm != null">
                comm = #{comm}
            </if>
        </set>
        where empno = #{empno}
    </update>
</mapper>